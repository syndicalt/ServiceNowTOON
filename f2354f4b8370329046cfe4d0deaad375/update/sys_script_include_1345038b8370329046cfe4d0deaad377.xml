<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>public</access>
        <active>true</active>
        <api_name>global.ToonTypesUtil</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <mobile_callable>false</mobile_callable>
        <name>ToonTypesUtil</name>
        <sandbox_callable>false</sandbox_callable>
        <script><![CDATA[/**
 * @file ToonTypeUtils – Type definitions for the Toon JSON encoder/decoder
 * @description Place this Script Include in *System Definition > Script Includes*
 *              and set **Client callable** = false, **Application** = Global.
 */

/**
 * ToonTypeUtils
 * @global
 * @type {Object}
 */
var ToonTypeUtils = (function () {
    'use strict';

    /**
     * --------------------------------------------------------------------
     *  Primitive JSON values
     * --------------------------------------------------------------------
     */

    /**
     * @typedef {string|number|boolean|null} JsonPrimitive
     */

    /**
     * @typedef {Object<string, JsonValue>} JsonObject
     * @property {JsonValue} [key] - any key may also be undefined
     */

    /**
     * @typedef {JsonValue[]|ReadonlyArray<JsonValue>} JsonArray
     */

    /**
     * @typedef {JsonPrimitive|JsonObject|JsonArray} JsonValue
     */


    /**
     * --------------------------------------------------------------------
     *  Encoder options
     * --------------------------------------------------------------------
     */

    /**
     * @typedef {'comma'|'semicolon'|'tab'|'pipe'} Delimiter
     */

    /**
     * @typedef {'comma'|'semicolon'|'tab'|'pipe'} DelimiterKey
     */

    /**
     * @typedef {Object} EncodeOptions
     * @property {number} [indent=2] - Number of spaces per indentation level.
     * @property {Delimiter} [delimiter] - Delimiter for rows / inline arrays (default = DELIMITERS.comma).
     * @property {'#'|false} [lengthMarker=false] - Prefix array length with '#'.
     */

    /**
     * @typedef {Object} ResolvedEncodeOptions
     * @property {number} indent - Required.
     * @property {Delimiter} delimiter - Required.
     * @property {'#'|false} lengthMarker - Required.
     */


    /**
     * --------------------------------------------------------------------
     *  Decoder options
     * --------------------------------------------------------------------
     */

    /**
     * @typedef {Object} DecodeOptions
     * @property {number} [indent=2] - Number of spaces per indentation level.
     * @property {boolean} [strict=true] - Enforce strict validation of lengths/rows.
     */

    /**
     * @typedef {Object} ResolvedDecodeOptions
     * @property {number} indent - Required.
     * @property {boolean} strict - Required.
     */


    /**
     * --------------------------------------------------------------------
     *  Decoder parsing types
     * --------------------------------------------------------------------
     */

    /**
     * @typedef {Object} ArrayHeaderInfo
     * @property {string} [key] - Optional key name.
     * @property {number} length - Declared array length.
     * @property {Delimiter} delimiter - Row delimiter.
     * @property {string[]} [fields] - Header field names (tabular mode).
     * @property {boolean} hasLengthMarker - true when `#` marker is present.
     */

    /**
     * @typedef {Object} ParsedLine
     * @property {string} raw - Original line text.
     * @property {Depth} depth - Nesting depth.
     * @property {number} indent - Leading whitespace count.
     * @property {string} content - Trimmed line content.
     * @property {number} lineNumber - 1-based line number.
     */

    /**
     * @typedef {Object} BlankLineInfo
     * @property {number} lineNumber - 1-based line number.
     * @property {number} indent - Leading whitespace count.
     * @property {Depth} depth - Nesting depth.
     */

    /**
     * @typedef {number} Depth
     */


    // --------------------------------------------------------------------
    // Public API – expose all typedefs on the returned object
    // --------------------------------------------------------------------
    return {
        JsonPrimitive: true,      // placeholder – JSDoc already defines the shape
        JsonObject: true,
        JsonArray: true,
        JsonValue: true,

        Delimiter: true,
        DelimiterKey: true,

        EncodeOptions: true,
        ResolvedEncodeOptions: true,

        DecodeOptions: true,
        ResolvedDecodeOptions: true,

        ArrayHeaderInfo: true,
        ParsedLine: true,
        BlankLineInfo: true,
        Depth: true
    };
})();]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-10-29 21:58:14</sys_created_on>
        <sys_id>1345038b8370329046cfe4d0deaad377</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>ToonTypesUtil</sys_name>
        <sys_package display_value="ServiceNow TOON" source="f2354f4b8370329046cfe4d0deaad375">f2354f4b8370329046cfe4d0deaad375</sys_package>
        <sys_policy/>
        <sys_scope display_value="ServiceNow TOON">f2354f4b8370329046cfe4d0deaad375</sys_scope>
        <sys_update_name>sys_script_include_1345038b8370329046cfe4d0deaad377</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-10-29 21:58:14</sys_updated_on>
    </sys_script_include>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>1345038b8370329046cfe4d0deaad377</id>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-10-29 21:58:13</sys_created_on>
        <sys_id>06b68f0f8370329046cfe4d0deaad357</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-10-29 21:58:13</sys_updated_on>
        <table>sys_script_include</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
